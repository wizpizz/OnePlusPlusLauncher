name: Android Release Build

on:
  workflow_dispatch: # Allows manual triggering
  push:
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    # Grant permissions for creating releases and uploading assets
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode Keystore
      id: decode_keystore
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'release.keystore'
        encodedString: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}

    - name: Build with Gradle
      env:
        SIGNING_KEY_STORE_PATH: ${{ steps.decode_keystore.outputs.filePath }}
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_STORE_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSWORD }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      run: ./gradlew assembleRelease

    - name: Upload Release APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/app-release.apk
        if-no-files-found: error

    # Optional: Upload to GitHub Release (if triggered by tag)
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with:
        # Use the tag name from the Git ref
        tag: ${{ github.ref_name }}
        # Use the tag name for the release name
        name: Release ${{ github.ref_name }}
        # Path to the artifact to upload
        artifacts: app/build/outputs/apk/release/app-release.apk
        # The action defaults to using github.token, which is fine with permissions set
        # token: ${{ secrets.GITHUB_TOKEN }} 
        # Mark as a production release (not draft or prerelease)
        draft: false
        prerelease: false 